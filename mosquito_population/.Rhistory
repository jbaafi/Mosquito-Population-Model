points(x, y)
c <- 0.0033
y1 <-  c*(x-b)^2+a
plot(x, y1, "l")
points(x, y)
c <- 0.0035
y1 <-  c*(x-b)^2+a
plot(x, y1, "l")
points(x, y)
m <- nls(y ~ c*(x-b)^2+a, data = adult.df.total, start = list(a = 0.045, b = 21, c=0.0035))
plot(x, y)
lines(x, predict(m))
summary(m)
m2 <- nls(y~c_0*exp(((b-c_1)/c_2)^4), data = adult.df.total, start = list(a = 0.045, b = 21, c=0.0035))
c_0 <-
y2 <- c_0*exp(((b-c_1)/c_2)^4)
762.82-1000
c_0 <- 0.0886
c_1 <- 21.211
c_2 <- 14.852
y2 <- c_0*exp(((x-c_1)/c_2)^4)
plot(x, y2, "l", col = "red")
plot(x, y1, "l")
plot(x, y2, "l", col = "red")
lines(x, y1)
points(x, y)
c_1 <- 20 #21.211
c_2 <- 14.852
y2 <- c_0*exp(((x-c_1)/c_2)^4)
plot(x, y2, "l", col = "red")
lines(x, y1)
points(x, y)
c_1 <- 21 #21.211
c_2 <- 14.852
y2 <- c_0*exp(((x-c_1)/c_2)^4)
plot(x, y2, "l", col = "red")
lines(x, y1)
points(x, y)
m2 <- nls(y~c_0*exp(((x-c_1)/c_2)^4), data = adult.df.total,
start = list(c_0 <- 0.0886, c_1 <- 21, c_2 <- 14.852))
m2 <- nls(y ~ c_0*exp(((x-c_1)/c_2)^4), data = adult.df.total,
start = list(c_0 <- 0.0886, c_1 <- 21, c_2 <- 14.852))
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
m2 <- nls(y ~ c_0*exp(((x-c_1)/c_2)^4), data = adult.df.total,
start = list(c_0 <- 0.0886, c_1 <- 21, c_2 <- 14.852))
m2 <- nls(y ~ c_0*exp(((x-c_1)/c_2)^4), data = adult.df.total,
start = list(c_0 <- 0.0886, c_1 <- 21, c_2 <- 14.852))
m2 <- nls(y ~ c*exp(((x-b)/a)^4), data = adult.df.total,
start = list(c <- 0.0886, b <- 21, a <- 14.852))
m2 <- nls(y ~ c*exp(((x-b)/a)^4), data = adult.df.total,
start = list(c <- 0.0886, b <- 21, a <- 14.852))
m2 <- nls(y ~ c*exp(((x-b)/a)^4), data = adult.df.total, start = list(c <- 0.0886, b <- 21, a <- 14.852))
m <- nls(y ~ c*(x-b)^2+a, data = adult.df.total, start = list(a = 0.045, b = 21, c=0.0035))
m2 <- nls(y ~ c*exp(((x-b)/a)^4), data = adult.df.total, start = list(c <- 0.0886, b <- 21, a <- 14.852))
m2 <- nls(y ~ c*exp(((x-b)/a)^4), data = adult.df.total, start = list(c <- 0.0886, b <- 21, a <- 14.852))
m2 <- nls(y ~ c*exp(((x-b)/a)^4), data = adult.df.total,
start = list(c = 0.0886, b = 21, a = 14.852))
plot(x, y)
lines(x, predict(m))
lines(x, predict(m2))
lines(x, predict(m2), "red")
lines(x, predict(m2), "red")
lines(x, predict(m2), col = "red")
summary(m)
summary(m2)
summary(m2)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
plot(x, y)
lines(x, predict(m))
lines(x, predict(m2), col = "red")
summary(m)
summary(m2)
rm(list = ls())
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
# Fit scalars in adult mortality function
c_A <- 0.08841
T_A <- 21.24746
d_A <- 14.92552
# This function defines adult mortality as a function of temperature
adult.mortality <- function(t){
adult.mortality <-  c_A*exp(((temp(t) - T_A)/d_A)^4)
return(adult.mortality)
}
df8 <- data.frame(t, adult.mortality(t))
#plot of adult mortality as a function of temperature as a function of time
ggplot(df8, aes(x=t, y=adult.mortality(t)))+
geom_line()
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
df8
head(df8)
head(df7)
# Fit scalars in pupa mortality function
c_P <- 0.001 #(Abdelrazek) #1.118e-03
T_P <- 20 #(Abdelrazak) #2.218e+01
d_P <- 0.15 #1.488e-02
# This function defines pupa mortality as a function of temperature
pupa.mortality <- function(t){
pupa.mortality <-  c_P*(temp(t) - T_P)^2 + d_P
return(pupa.mortality)
}
df7 <- data.frame(t, pupa.mortality(t))
#plot of pupa mortality as a function of temperature as a function of time
ggplot(df7, aes(x=t, y=pupa.mortality(t)))+
geom_line()
# Fit scalars in adult mortality function
c_A <- 0.08841
T_A <- 21.24746
d_A <- 14.92552
# This function defines adult mortality as a function of temperature
adult.mortality <- function(t){
adult.mortality <-  c_A*exp(((temp(t) - T_A)/d_A)^4)
return(adult.mortality)
}
df8 <- data.frame(t, adult.mortality(t))
#plot of adult mortality as a function of temperature as a function of time
ggplot(df8, aes(x=t, y=adult.mortality(t)))+
geom_line()
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
m2 <- nls(y ~ c_A*exp(((x-T_A)/d_A)^4), data = adult.df.total,
start = list(c_A = 0.0886, T_A = 21, d_A = 14.852))
plot(x, y)
lines(x, predict(m))
lines(x, predict(m2), col = "red")
summary(m)
summary(m2)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
# This function defines adult mortality as a function of temperature
adult.mortality <- function(t){
adult.mortality <-  c_A*exp(((temp(t)-T_A)/d_A)^4)
return(adult.mortality)
}
df8 <- data.frame(t, adult.mortality(t))
#plot of adult mortality as a function of temperature as a function of time
ggplot(df8, aes(x=t, y=adult.mortality(t)))+
geom_line()
# Fit scalars in larvae mortality function
c_L <- 0.0025 #(Abdelrazek) #1.118e-03
T_L <- 20 #(Abdelrazak) #2.218e+01
d_L <- 0.2 #1.488e-02
# This function defines larva mortality as a function of temperature
larva.mortality <- function(t){
larva.mortality <-  c_L*(temp(t) - T_L)^2 + d_L
return(larva.mortality)
}
df6 <- data.frame(t, larva.mortality(t))
#plot of larva mortality as a function of temperature as a function of time
ggplot(df6, aes(x=t, y=larva.mortality(t)))+
geom_line()
# Fit scalars in pupa mortality function
c_P <- 0.001 #(Abdelrazek) #1.118e-03
T_P <- 20 #(Abdelrazak) #2.218e+01
d_P <- 0.15 #1.488e-02
# This function defines pupa mortality as a function of temperature
pupa.mortality <- function(t){
pupa.mortality <-  c_P*(temp(t) - T_P)^2 + d_P
return(pupa.mortality)
}
df7 <- data.frame(t, pupa.mortality(t))
#plot of pupa mortality as a function of temperature as a function of time
ggplot(df7, aes(x=t, y=pupa.mortality(t)))+
geom_line()
# Fit scalars in adult mortality function
c_A <- 0.08841
T_A <- 21.24746
d_A <- 14.92552
# This function defines adult mortality as a function of temperature
adult.mortality <- function(t){
adult.mortality <-  c_A*exp(((temp(t)-T_A)/d_A)^4)
return(adult.mortality)
}
df8 <- data.frame(t, adult.mortality(t))
#plot of adult mortality as a function of temperature as a function of time
ggplot(df8, aes(x=t, y=adult.mortality(t)))+
geom_line()
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
plot(temp(t), adult.mortality(t))
plot(temp(t), adult.mortality(temp(t)))
plot(temp(t), adult.mortality(t))
plot
plot(temp(t), adult.mortality(t))
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
#Clear workspace
rm(list = ls())
#set working directory
setwd("/Users/jbaafi/Desktop/mosquito_population")
# Import packages into r
library(tidyverse)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
plot(df8)
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
head(df8, 10)
head(df7, 10)
plot(df7)
tail(df7)
head(df6)
tail(df6)
plot(df6)
plot(df6)
3/2
3.2/2
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
summary(m)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
#Plot of temperature as a function of time (365 days)
ggplot(data = df, mapping = aes(x=t, y=temp(t)))+
geom_line()
# Fit scalar in gentrophic cycle rate function
alpha <- 168.0257252
#Plot of temperature as a function of time (365 days)
ggplot(data = df, mapping = aes(x=t, y=temp(t)))+
geom_line()
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
df <- data.frame(t, temp(t))
#Plot of temperature as a function of time (365 days)
ggplot(data = df, mapping = aes(x=t, y=temp(t)))+
geom_line()
source('~/Documents/Data/code/temp_precip_analysis_code.R', echo=TRUE)
#Plotting with same data as above with ggplot2
ggplot(data = climate.df)+
geom_point(mapping = aes(x=Days.Since.Origin, y=Mean.Temp))+
geom_line(mapping = aes(x=Days.Since.Origin, y=fit, colour="red"))+
geom_line(mapping = aes(x=Time, y=pred, colour="blue"))
#Plot of temperature as a function of time (365 days)
ggplot(data = df, mapping = aes(x=t, y=temp(t)))+
geom_line()
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
#Plot of temperature as a function of time (365 days)
ggplot(data = df, mapping = aes(x=t, y=temp(t)))+
geom_line()
# Defining temperature function
temp <- function(t){
temp = a + b1*sin(2 * pi * t/365) + b2*cos(2 * pi * t/365)
return(temp)
}
df <- data.frame(t, temp(t))
#Plot of temperature as a function of time (365 days)
ggplot(data = df, mapping = aes(x=t, y=temp(t)))+
geom_line()
# Fit scalar in gentrophic cycle rate function
alpha <- 168.0257252
beta <- 34.0632871
gamma <- 0.4371833
# This function defines the relationship between temperature and genotrophic cycle
gen <- function(t){
gen <-  gamma*exp(-(temp(t)-beta)^2/alpha)
return(gen)
}
df1 <- data.frame(t, gen(t))
#plot of genotrophic cycle as a function of temperature as a function of time
ggplot(df1, aes(x=t, y=gen(t)))+
geom_line()
# Fit scalars in egg development rate function
alpha_e <- 1337.666814
beta_e <- 75.098187
gamma_e <- 4.049403
# This function defines the relationship between temperature and genotrophic cycle
egg.dev <- function(t){
egg <-  gamma_e*exp(-(temp(t)-beta_e)^2/alpha_e)
return(egg)
}
df2 <- data.frame(t, egg.dev(t))
#plot of egg development as a function of temperature as a function of time
ggplot(df2, aes(x=t, y=egg.dev(t)))+
geom_line()
# Fit scalars in larvae development rate function
alpha_l <- 109.03255
beta_l <- 27.18118
gamma_l <- 0.16231
# This function defines the relationship between temperature and genotrophic cycle
larva.dev <- function(t){
larva <-  gamma_l*exp(-(temp(t)-beta_l)^2/alpha_l)
return(larva)
}
df3 <- data.frame(t, larva.dev(t))
#plot of larva development as a function of temperature as a function of time
ggplot(df3, aes(x=t, y=larva.dev(t)))+
geom_line()
# Fit scalars in pupal development rate function
alpha_p <- 339.6702830
beta_p <- 39.9070020
gamma_p <-  0.5920232
# This function defines pupa development as a function of temperature
pupa.dev <- function(t){
pupa <-  gamma_p*exp(-(temp(t)-beta_p)^2/alpha_p)
return(pupa)
}
df4 <- data.frame(t, pupa.dev(t))
#plot of pupa development as a function of temperature as a function of time
ggplot(df4, aes(x=t, y=pupa.dev(t)))+
geom_line()
# Fit scalars in egg mortality function
c_E <- 1.118e-03
T_E <- 2.218e+01
d_E <- 1.488e-02
# This function defines egg mortality as a function of temperature
egg.mortality <- function(t){
egg.mortality <-  c_E*(temp(t) - T_E)^2 + d_E
return(egg.mortality)
}
df5 <- data.frame(t, egg.mortality(t))
#plot of egg mortality as a function of temperature as a function of time
ggplot(df5, aes(x=t, y=egg.mortality(t)))+
geom_line()
# Fit scalars in larvae mortality function
c_L <- 0.0025 #(Abdelrazek) #1.118e-03
T_L <- 20 #(Abdelrazak) #2.218e+01
d_L <- 0.2 #1.488e-02
# This function defines larva mortality as a function of temperature
larva.mortality <- function(t){
larva.mortality <-  c_L*(temp(t) - T_L)^2 + d_L
return(larva.mortality)
}
df6 <- data.frame(t, larva.mortality(t))
#plot of larva mortality as a function of temperature as a function of time
ggplot(df6, aes(x=t, y=larva.mortality(t)))+
geom_line()
# Fit scalars in pupa mortality function
c_P <- 0.001 #(Abdelrazek) #1.118e-03
T_P <- 20 #(Abdelrazak) #2.218e+01
d_P <- 0.15 #1.488e-02
# This function defines pupa mortality as a function of temperature
pupa.mortality <- function(t){
pupa.mortality <-  c_P*(temp(t) - T_P)^2 + d_P
return(pupa.mortality)
}
df7 <- data.frame(t, pupa.mortality(t))
#plot of pupa mortality as a function of temperature as a function of time
ggplot(df7, aes(x=t, y=pupa.mortality(t)))+
geom_line()
# Fit scalars in adult mortality function
c_A <- 0.08841
T_A <- 21.24746
d_A <- 14.92552
# This function defines adult mortality as a function of temperature
adult.mortality <- function(t){
adult.mortality <-  c_A*exp(((temp(t)-T_A)/d_A)^4)
return(adult.mortality)
}
df8 <- data.frame(t, adult.mortality(t))
#plot of adult mortality as a function of temperature as a function of time
ggplot(df8, aes(x=t, y=adult.mortality(t)))+
geom_line()
# Fit scalars in adult mortality function
a <- -0.0535169
b <- 19.6216633
c <-  0.0022388
# This function defines adult mortality as a function of temperature
ad.mortality <- function(t){
ad.mortality <-  c*(temp(t)-b)^2+a
return(ad.mortality)
}
df9 <- data.frame(t, ad.mortality(t))
#plot of adult mortality as a function of temperature as a function of time
ggplot(df9, aes(x=t, y=ad.mortality(t)))+
geom_line()
#Plot of temperature as a function of time (365 days)
ggplot(data = df, mapping = aes(x=t, y=temp(t)))+
geom_line()
source('~/Documents/Data/code/temp_precip_analysis_code.R', echo=TRUE)
# Fitting function to data of mean temperature
Time <- climate.df$Days.Since.Origin
Temp <- climate.df$Mean.Temp
#Define a periodic function to fit to data
Temp.func <- sin(2*pi*Time/365) + cos(2*pi*Time/365)
fit.lm <- lm(Temp~Temp.func)
fit <- fitted(fit.lm)
# find predictions for original time series
pred <- predict(fit.lm, newdata=data.frame(Time=Time))
#Plotting the data with fitted function with the base plot function
plot(Temp ~ Days.Since.Origin, data= climate.df)
lines(fit, col="red")
lines(Time, pred, col="blue")
summary(fit.lm)
#Model parameters
a <-  8.9231#mean(climate.df$Mean.Temp)
b1 <- -8.7635
b2 <- b1
t_end <- 365
#t <- Time
#dtime = 0.5 # time steps
t <-  seq(0, t_end, #dtime
)
t0 <-t[1]
# Defining temperature function
temp <- function(t){
temp = a + b1*sin(2 * pi * t/365) + b2*cos(2 * pi * t/365)
return(temp)
}
df <- data.frame(t, temp(t))
#Plot of temperature as a function of time (365 days)
ggplot(data = df, mapping = aes(x=t, y=temp(t)))+
geom_line()
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
# Fit scalars in adult mortality function
c_A <- 0.08841
T_A <- 21.24746
d_A <- 14.92552
# This function defines adult mortality as a function of temperature
adult.mortality <- function(t){
adult.mortality <-  c_A*exp(((temp(t)-T_A)/d_A)^4)
return(adult.mortality)
}
df8 <- data.frame(t, adult.mortality(t))
#plot of adult mortality as a function of temperature as a function of time
ggplot(df8, aes(x=t, y=adult.mortality(t)))+
geom_line()
plot(df8)
#Define a periodic function to fit to data
Temp.func <- sin(2*pi*Time/365) + cos(2*pi*Time/365)
fit.lm <- lm(Temp~Temp.func)
fit <- fitted(fit.lm)
# find predictions for original time series
pred <- predict(fit.lm, newdata=data.frame(Time=Time))
#Plotting the data with fitted function with the base plot function
plot(Temp ~ Days.Since.Origin, data= climate.df)
lines(fit, col="red")
lines(Time, pred, col="blue")
summary(fit.lm)
#Model parameters
a <-  8.9231 #mean(climate.df$Mean.Temp)
b1 <- -8.7635
b2 <- b1
# Defining temperature function
temp <- function(t){
temp = a + b1*sin(2 * pi * t/365) + b2*cos(2 * pi * t/365)
return(temp)
}
df <- data.frame(t, temp(t))
#Plot of temperature as a function of time (365 days)
ggplot(data = df, mapping = aes(x=t, y=temp(t)))+
geom_line()
#Model parameters
a <-  mean(climate.df$Mean.Temp)
b1 <- -8.7635
b2 <- b1
t_end <- 365
#t <- Time
#dtime = 0.5 # time steps
t <-  seq(0, t_end, #dtime
)
t0 <-t[1]
# Defining temperature function
temp <- function(t){
temp = a + b1*sin(2 * pi * t/365) + b2*cos(2 * pi * t/365)
return(temp)
}
df <- data.frame(t, temp(t))
#Plot of temperature as a function of time (365 days)
ggplot(data = df, mapping = aes(x=t, y=temp(t)))+
geom_line()
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
#Plot of temperature as a function of time (365 days)
ggplot(data = df, mapping = aes(x=t, y=temp(t)))+
geom_line()
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
#Plot of temperature as a function of time (365 days)
ggplot(data = df, mapping = aes(x=t, y=temp(t)))+
geom_line()
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
temp = a + b1*sin(2 * pi * t/365) + b2*cos(2 * pi * t/365)
return(temp)
# Defining temperature function
temp <- function(t){
temp = a + b1*sin(2 * pi * t/365) + b2*cos(2 * pi * t/365)
return(temp)
}
df <- data.frame(t, temp(t))
#Plot of temperature as a function of time (365 days)
ggplot(data = df, mapping = aes(x=t, y=temp(t)))+
geom_line()
# Fit scalar in gentrophic cycle rate function
alpha <- 168.0257252
beta <- 34.0632871
gamma <- 0.4371833
# This function defines the relationship between temperature and genotrophic cycle
gen <- function(t){
gen <-  gamma*exp(-(temp(t)-beta)^2/alpha)
return(gen)
}
df1 <- data.frame(t, gen(t))
#plot of genotrophic cycle as a function of temperature as a function of time
ggplot(df1, aes(x=t, y=gen(t)))+
geom_line()
# Fit scalars in adult mortality function
c_A <- 0.08841
T_A <- 21.24746
d_A <- 14.92552
# This function defines adult mortality as a function of temperature
adult.mortality <- function(t){
adult.mortality <-  c_A*exp(((temp(t)-T_A)/d_A)^4)
return(adult.mortality)
}
df8 <- data.frame(t, adult.mortality(t))
#plot of adult mortality as a function of temperature as a function of time
ggplot(df8, aes(x=t, y=adult.mortality(t)))+
geom_line()
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
?deSolve
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
# Numerical integration.
out <-  ode(y = y0, func = model, times = t, parms = 0)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
