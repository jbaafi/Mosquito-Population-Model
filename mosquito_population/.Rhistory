c <- 0.0012
y1 <-  c*(x-b)^2+a
plot(x, y1, "l")
points(x, y)
b <- 22
c <- 0.0012
y1 <-  c*(x-b)^2+a
plot(x, y1, "l")
points(x, y)
b <- 21
c <- 0.0012
y1 <-  c*(x-b)^2+a
plot(x, y1, "l")
points(x, y)
b <- 23
c <- 0.0012
y1 <-  c*(x-b)^2+a
plot(x, y1, "l")
points(x, y)
a <- 0.015
b <- 23
c <- 0.0012
y1 <-  c*(x-b)^2+a
plot(x, y1, "l")
points(x, y)
plot(x, y1, "l", ylim = c(0, 0.15))
points(x, y)
plot(x, y1, "l")
points(x, y)
m <- nls(y ~ c*(x-b)^2+a, data = juv.df.total, start = list(a = 0.015, b = 23, c=0.0012))
plot(x, y)
lines(x, predict(m))
summary(m)
m <- nls(y ~ c*(x-b)^2+a, data = juv.df.total, start = list(a = 0.015, b = 23, c=0.0012))
plot(x, y)
lines(x, predict(m))
summary(m)
# Fit scalars in juvinile mortality function
c_E <- 1.118e-03
T_E <- 2.218e+01
d_E <- 1.488e-02
# This function defines pupa development as a function of temperature
egg.mortality <- function(t){
egg.mortality <-  c_E*(temp(t) - T_E)^2 + d_E
return(egg.mortality)
}
df5 <- data.frame(t, egg.mortality(t))
#plot of pupa development as a function of temperature as a function of time
ggplot(df5, aes(x=t, y=egg.mortality(t)))+
geom_line()
df5 <- data.frame(t, egg.mortality(t))
# This function defines pupa development as a function of temperature
egg.mortality <- function(t){
egg.mortality <-  c_E*(temp(t) - T_E)^2 + d_E
return(egg.mortality)
}
df5 <- data.frame(t, egg.mortality(t))
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
df5 <- data.frame(t, egg.mortality(t))
#plot of pupa development as a function of temperature as a function of time
ggplot(df5, aes(x=t, y=egg.mortality(t)))+
geom_line()
source('~/Documents/Research@MUN/model parameterization data/juvinile_death.R', echo=TRUE)
xx <- seq(0, 40)
xx <- seq(0, 40)
plot(xx, y1)
xx <- seq(0, 40)
a <- 0.015
b <- 23
c <- 0.0012
y1 <-  c*(xx-b)^2+a
plot(xx, y1, "l")
egg.mortality <-  c_E*(temp(t) - T_E)^2 + d_E
return(egg.mortality)
# This function defines pupa development as a function of temperature
egg.mortality <- function(t){
egg.mortality <-  c_E*(temp(t) - T_E)^2 + d_E
return(egg.mortality)
}
df5 <- data.frame(t, egg.mortality(t))
#plot of pupa development as a function of temperature as a function of time
ggplot(df5, aes(x=t, y=egg.mortality(t)))+
geom_line()
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
plot(temp(t), egg.mortality(t))
plot(temp(t), egg.mortality(t), "L")
plot(temp(t), egg.mortality(t), "l")
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
#Plot of temperature as a function of time (365 days)
ggplot(data = df, mapping = aes(x=t, y=temp(t)))+
geom_line()
#plot of genotrophic cycle as a function of temperature as a function of time
ggplot(df1, aes(x=t, y=gen(t)))+
geom_line()
#plot of egg development as a function of temperature as a function of time
ggplot(df2, aes(x=t, y=egg.dev(t)))+
geom_line()
#plot of larva development as a function of temperature as a function of time
ggplot(df3, aes(x=t, y=larva.dev(t)))+
geom_line()
#plot of pupa development as a function of temperature as a function of time
ggplot(df4, aes(x=t, y=pupa.dev(t)))+
geom_line()
#plot of egg mortality as a function of temperature as a function of time
ggplot(df5, aes(x=t, y=egg.mortality(t)))+
geom_line()
#plot of egg mortality as a function of temperature as a function of time
ggplot(df5, aes(x=t, y=egg.mortality(t)))+
geom_line()
#plot of egg mortality as a function of temperature as a function of time
ggplot(df5, aes(x=t, y=egg.mortality(t)))+
geom_line()
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
#plot of egg mortality as a function of temperature as a function of time
ggplot(df5, aes(x=t, y=egg.mortality(t)))+
geom_line()
#plot of larva mortality as a function of temperature as a function of time
ggplot(df6, aes(x=t, y=larva.mortality(t)))+
geom_line()
#plot of larva mortality as a function of temperature as a function of time
ggplot(df7, aes(x=t, y=pupa.mortality(t)))+
geom_line()
#plot of pupa mortality as a function of temperature as a function of time
ggplot(df7, aes(x=t, y=pupa.mortality(t)))+
geom_line()
#Clear workspace
rm(list = ls())
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
# Data on adult death rates  primarily taken from Beck-Johnson et al,
temp <- c(5, 10, 15, 20, 25, 30, 35, 40)
mortality.paper1 <- c(0.358, 0.190, 0.053, 0.042, 0.042, 0.114, 0.232, 1.283)
mortality.paper2 <- c(0.358, 0.144, 0.053, 0.049, 0.053, 0.107, 0.215, 0.849)
adult.mortality.df <- data.frame(temp, mortality.paper1, mortality.paper2)
#visualize data with base plot function
plot(adult.mortality.df$temp, adult.mortality.df$mortality.paper1, pch = 5)
points(adult.mortality.df$temp, adult.mortality.df$mortality.paper2, pch = 8, col = "red")
#visualize data with ggplot2
ggplot(data=adult.mortality.df)+
geom_point(mapping = aes(x=temp, y=mortality.paper1, color = "red"), shape = 5)+
geom_point(mapping = aes(x=temp, y=mortality.paper2, color = "blue"), shape=8)
# Fitting a model to the data
adult.df.1 <- adult.mortality.df[,1:2]
adult.df.1$sym <- rep("paper 1", 8)
adult.df.2 <- adult.mortality.df[,c(1,3)]
adult.df.2$sym <- rep("paper 2", 8)
adult.df.1 <- adult.df.1 %>%
rename(
mortality.rate = mortality.paper1,
)
adult.df.1 <- adult.df.1 %>%
rename(
mortality.rate = mortality.paper1,
)
adult.df.2 <- adult.df.2 %>%
rename(
mortality.rate = mortality.paper2,
)
# Fitting a model to the data
adult.df.1 <- adult.mortality.df[,1:2]
adult.df.1$sym <- rep("paper 1", 8)
adult.df.2 <- adult.mortality.df[,c(1,3)]
adult.df.2$sym <- rep("paper 2", 8)
adult.df.1 <- adult.df.1 %>%
rename(
mortality.rate = mortality.paper1,
)
adult.df.2 <- adult.df.2 %>%
rename(
mortality.rate = mortality.paper2,
)
adult.df.total <- rbind(adult.df.1, adult.df.2)
#visualize the new adult mortality data.frame
plot(adult.df.total$temp, adult.df.total$mortality.rate)
ggplot(data = adult.df.total, mapping = aes(x=temp, y=mortality.rate))+
geom_jitter(aes(colour=factor(sym)))
# Fitting a polynomial to the adult mortality dataset
x <- adult.df.total$temp
y <- adult.df.total$mortality.rate
################################################################################
x <- adult.df.total$temp
y <- adult.df.total$mortality.rate
plot(x, y)
adult.df.total
#Fitting a non-linear function to the data using the nls() function
adult.df.total <- adult.df.total[order(adult.df.total),]
adult.df.total
adult.df.total
#Fitting a non-linear function to the data using the nls() function
adult.df.total <- adult.df.total[order(adult.df.total),]
adult.df.total
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
adult.df.total
#Fitting a non-linear function to the data using the nls() function
adult.df.total <- adult.df.total[order(adult.df.total$temp),]
adult.df.total
rm(list = ls())
#Clear workspace
rm(list = ls())
#set working directory
setwd("/Users/jbaafi/Documents/Research@MUN/model parameterization data")
library(tidyverse)
library(dplyr)
library(chron)
library(ggplot2)
# Data on adult death rates  primarily taken from Beck-Johnson et al,
temp <- c(5, 10, 15, 20, 25, 30, 35, 40)
mortality.paper1 <- c(0.358, 0.190, 0.053, 0.042, 0.042, 0.114, 0.232, 1.283)
mortality.paper2 <- c(0.358, 0.144, 0.053, 0.049, 0.053, 0.107, 0.215, 0.849)
adult.mortality.df <- data.frame(temp, mortality.paper1, mortality.paper2)
#visualize data with base plot function
plot(adult.mortality.df$temp, adult.mortality.df$mortality.paper1, pch = 5)
points(adult.mortality.df$temp, adult.mortality.df$mortality.paper2, pch = 8, col = "red")
#visualize data with ggplot2
ggplot(data=adult.mortality.df)+
geom_point(mapping = aes(x=temp, y=mortality.paper1, color = "red"), shape = 5)+
geom_point(mapping = aes(x=temp, y=mortality.paper2, color = "blue"), shape=8)
# Fitting a model to the data
adult.df.1 <- adult.mortality.df[,1:2]
adult.df.1$sym <- rep("paper 1", 8)
adult.df.2 <- adult.mortality.df[,c(1,3)]
adult.df.2$sym <- rep("paper 2", 8)
adult.df.1 <- adult.df.1 %>%
rename(
mortality.rate = mortality.paper1,
)
adult.df.2 <- adult.df.2 %>%
rename(
mortality.rate = mortality.paper2,
)
adult.df.total <- rbind(adult.df.1, adult.df.2)
#visualize the new adult mortality data.frame
plot(adult.df.total$temp, adult.df.total$mortality.rate)
adult.df.total
plot
plot
#visualize the new adult mortality data.frame
plot(adult.df.total$temp, adult.df.total$mortality.rate)
ggplot(data = adult.df.total, mapping = aes(x=temp, y=mortality.rate))+
geom_jitter(aes(colour=factor(sym)))
adult.df.total
################################################################################
#Fitting a non-linear function to the data using the nls() function
adult.df.total <- adult.df.total[order(adult.df.total$temp),]
adult.df.total
x <- adult.df.total$temp
y <- adult.df.total$mortality.rate
plot(x, y)
a <- 0.045
b <- 20
c <- 0.0012
y1 <-  c*(xx-b)^2+a
plot(x, y1, "l")
x <- adult.df.total$temp
y <- adult.df.total$mortality.rate
plot(x, y)
a <- 0.045
b <- 20
c <- 0.0012
y1 <-  c*(x-b)^2+a
plot(x, y1, "l")
points(x, y)
plot(x, y)
plot(x, y1, "l")
points(x, y)
c <- 0.003
y1 <-  c*(x-b)^2+a
plot(x, y1, "l")
points(x, y)
c <- 0.0032
y1 <-  c*(x-b)^2+a
plot(x, y1, "l")
points(x, y)
b <- 21
c <- 0.0032
y1 <-  c*(x-b)^2+a
plot(x, y1, "l")
points(x, y)
c <- 0.0035
y1 <-  c*(x-b)^2+a
plot(x, y1, "l")
points(x, y)
c <- 0.0038
y1 <-  c*(x-b)^2+a
plot(x, y1, "l")
points(x, y)
c <- 0.0042
y1 <-  c*(x-b)^2+a
plot(x, y1, "l")
points(x, y)
c <- 0.0031
y1 <-  c*(x-b)^2+a
plot(x, y1, "l")
points(x, y)
c <- 0.0033
y1 <-  c*(x-b)^2+a
plot(x, y1, "l")
points(x, y)
c <- 0.0035
y1 <-  c*(x-b)^2+a
plot(x, y1, "l")
points(x, y)
m <- nls(y ~ c*(x-b)^2+a, data = adult.df.total, start = list(a = 0.045, b = 21, c=0.0035))
plot(x, y)
lines(x, predict(m))
summary(m)
m2 <- nls(y~c_0*exp(((b-c_1)/c_2)^4), data = adult.df.total, start = list(a = 0.045, b = 21, c=0.0035))
c_0 <-
y2 <- c_0*exp(((b-c_1)/c_2)^4)
762.82-1000
c_0 <- 0.0886
c_1 <- 21.211
c_2 <- 14.852
y2 <- c_0*exp(((x-c_1)/c_2)^4)
plot(x, y2, "l", col = "red")
plot(x, y1, "l")
plot(x, y2, "l", col = "red")
lines(x, y1)
points(x, y)
c_1 <- 20 #21.211
c_2 <- 14.852
y2 <- c_0*exp(((x-c_1)/c_2)^4)
plot(x, y2, "l", col = "red")
lines(x, y1)
points(x, y)
c_1 <- 21 #21.211
c_2 <- 14.852
y2 <- c_0*exp(((x-c_1)/c_2)^4)
plot(x, y2, "l", col = "red")
lines(x, y1)
points(x, y)
m2 <- nls(y~c_0*exp(((x-c_1)/c_2)^4), data = adult.df.total,
start = list(c_0 <- 0.0886, c_1 <- 21, c_2 <- 14.852))
m2 <- nls(y ~ c_0*exp(((x-c_1)/c_2)^4), data = adult.df.total,
start = list(c_0 <- 0.0886, c_1 <- 21, c_2 <- 14.852))
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
m2 <- nls(y ~ c_0*exp(((x-c_1)/c_2)^4), data = adult.df.total,
start = list(c_0 <- 0.0886, c_1 <- 21, c_2 <- 14.852))
m2 <- nls(y ~ c_0*exp(((x-c_1)/c_2)^4), data = adult.df.total,
start = list(c_0 <- 0.0886, c_1 <- 21, c_2 <- 14.852))
m2 <- nls(y ~ c*exp(((x-b)/a)^4), data = adult.df.total,
start = list(c <- 0.0886, b <- 21, a <- 14.852))
m2 <- nls(y ~ c*exp(((x-b)/a)^4), data = adult.df.total,
start = list(c <- 0.0886, b <- 21, a <- 14.852))
m2 <- nls(y ~ c*exp(((x-b)/a)^4), data = adult.df.total, start = list(c <- 0.0886, b <- 21, a <- 14.852))
m <- nls(y ~ c*(x-b)^2+a, data = adult.df.total, start = list(a = 0.045, b = 21, c=0.0035))
m2 <- nls(y ~ c*exp(((x-b)/a)^4), data = adult.df.total, start = list(c <- 0.0886, b <- 21, a <- 14.852))
m2 <- nls(y ~ c*exp(((x-b)/a)^4), data = adult.df.total, start = list(c <- 0.0886, b <- 21, a <- 14.852))
m2 <- nls(y ~ c*exp(((x-b)/a)^4), data = adult.df.total,
start = list(c = 0.0886, b = 21, a = 14.852))
plot(x, y)
lines(x, predict(m))
lines(x, predict(m2))
lines(x, predict(m2), "red")
lines(x, predict(m2), "red")
lines(x, predict(m2), col = "red")
summary(m)
summary(m2)
summary(m2)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
plot(x, y)
lines(x, predict(m))
lines(x, predict(m2), col = "red")
summary(m)
summary(m2)
rm(list = ls())
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
# Fit scalars in adult mortality function
c_A <- 0.08841
T_A <- 21.24746
d_A <- 14.92552
# This function defines adult mortality as a function of temperature
adult.mortality <- function(t){
adult.mortality <-  c_A*exp(((temp(t) - T_A)/d_A)^4)
return(adult.mortality)
}
df8 <- data.frame(t, adult.mortality(t))
#plot of adult mortality as a function of temperature as a function of time
ggplot(df8, aes(x=t, y=adult.mortality(t)))+
geom_line()
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
df8
head(df8)
head(df7)
# Fit scalars in pupa mortality function
c_P <- 0.001 #(Abdelrazek) #1.118e-03
T_P <- 20 #(Abdelrazak) #2.218e+01
d_P <- 0.15 #1.488e-02
# This function defines pupa mortality as a function of temperature
pupa.mortality <- function(t){
pupa.mortality <-  c_P*(temp(t) - T_P)^2 + d_P
return(pupa.mortality)
}
df7 <- data.frame(t, pupa.mortality(t))
#plot of pupa mortality as a function of temperature as a function of time
ggplot(df7, aes(x=t, y=pupa.mortality(t)))+
geom_line()
# Fit scalars in adult mortality function
c_A <- 0.08841
T_A <- 21.24746
d_A <- 14.92552
# This function defines adult mortality as a function of temperature
adult.mortality <- function(t){
adult.mortality <-  c_A*exp(((temp(t) - T_A)/d_A)^4)
return(adult.mortality)
}
df8 <- data.frame(t, adult.mortality(t))
#plot of adult mortality as a function of temperature as a function of time
ggplot(df8, aes(x=t, y=adult.mortality(t)))+
geom_line()
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
m2 <- nls(y ~ c_A*exp(((x-T_A)/d_A)^4), data = adult.df.total,
start = list(c_A = 0.0886, T_A = 21, d_A = 14.852))
plot(x, y)
lines(x, predict(m))
lines(x, predict(m2), col = "red")
summary(m)
summary(m2)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
# This function defines adult mortality as a function of temperature
adult.mortality <- function(t){
adult.mortality <-  c_A*exp(((temp(t)-T_A)/d_A)^4)
return(adult.mortality)
}
df8 <- data.frame(t, adult.mortality(t))
#plot of adult mortality as a function of temperature as a function of time
ggplot(df8, aes(x=t, y=adult.mortality(t)))+
geom_line()
# Fit scalars in larvae mortality function
c_L <- 0.0025 #(Abdelrazek) #1.118e-03
T_L <- 20 #(Abdelrazak) #2.218e+01
d_L <- 0.2 #1.488e-02
# This function defines larva mortality as a function of temperature
larva.mortality <- function(t){
larva.mortality <-  c_L*(temp(t) - T_L)^2 + d_L
return(larva.mortality)
}
df6 <- data.frame(t, larva.mortality(t))
#plot of larva mortality as a function of temperature as a function of time
ggplot(df6, aes(x=t, y=larva.mortality(t)))+
geom_line()
# Fit scalars in pupa mortality function
c_P <- 0.001 #(Abdelrazek) #1.118e-03
T_P <- 20 #(Abdelrazak) #2.218e+01
d_P <- 0.15 #1.488e-02
# This function defines pupa mortality as a function of temperature
pupa.mortality <- function(t){
pupa.mortality <-  c_P*(temp(t) - T_P)^2 + d_P
return(pupa.mortality)
}
df7 <- data.frame(t, pupa.mortality(t))
#plot of pupa mortality as a function of temperature as a function of time
ggplot(df7, aes(x=t, y=pupa.mortality(t)))+
geom_line()
# Fit scalars in adult mortality function
c_A <- 0.08841
T_A <- 21.24746
d_A <- 14.92552
# This function defines adult mortality as a function of temperature
adult.mortality <- function(t){
adult.mortality <-  c_A*exp(((temp(t)-T_A)/d_A)^4)
return(adult.mortality)
}
df8 <- data.frame(t, adult.mortality(t))
#plot of adult mortality as a function of temperature as a function of time
ggplot(df8, aes(x=t, y=adult.mortality(t)))+
geom_line()
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
plot(temp(t), adult.mortality(t))
plot(temp(t), adult.mortality(temp(t)))
plot(temp(t), adult.mortality(t))
plot
plot(temp(t), adult.mortality(t))
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
#Clear workspace
rm(list = ls())
#set working directory
setwd("/Users/jbaafi/Desktop/mosquito_population")
# Import packages into r
library(tidyverse)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
plot(df8)
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
head(df8, 10)
head(df7, 10)
plot(df7)
tail(df7)
head(df6)
tail(df6)
plot(df6)
plot(df6)
3/2
3.2/2
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
summary(m)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
source('~/Documents/Research@MUN/model parameterization data/adult_death_function.R', echo=TRUE)
source('~/Desktop/mosquito_population/mosquito_model.R', echo=TRUE)
#Plot of temperature as a function of time (365 days)
ggplot(data = df, mapping = aes(x=t, y=temp(t)))+
geom_line()
# Fit scalar in gentrophic cycle rate function
alpha <- 168.0257252
#Plot of temperature as a function of time (365 days)
ggplot(data = df, mapping = aes(x=t, y=temp(t)))+
geom_line()
